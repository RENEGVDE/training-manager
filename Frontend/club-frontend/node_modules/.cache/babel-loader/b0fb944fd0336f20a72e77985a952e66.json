{"ast":null,"code":"import { LOGIN_REQUEST, LOGOUT_REQUEST, SUCCESS, FAILURE } from './authTypes';\nexport const authenticateUser = (username, password) => {\n  return dispatch => {\n    dispatch(loginRequest());\n\n    if (username === \"test\" && password === \"test\") {\n      dispatch(success(true));\n    } else {\n      dispatch(failure());\n    }\n  };\n};\n\nconst loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\n\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch(logoutRequest());\n    dispatch(success(false));\n  };\n};\n\nconst logoutRequest = () => {\n  return {\n    type: LOGOUT_REQUEST\n  };\n};\n\nconst success = isLoggedIn => {\n  return {\n    type: SUCCESS,\n    payload: isLoggedIn\n  };\n};\n\nconst failure = () => {\n  return {\n    type: FAILURE,\n    payload: false\n  };\n};","map":{"version":3,"sources":["D:/RENEGVDE/UNIVER/ITS3/Project/Club Management/Frontend/club-frontend/src/services/user/auth/authActions.js"],"names":["LOGIN_REQUEST","LOGOUT_REQUEST","SUCCESS","FAILURE","authenticateUser","username","password","dispatch","loginRequest","success","failure","type","logoutUser","logoutRequest","isLoggedIn","payload"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,cAAvB,EAAuCC,OAAvC,EAAgDC,OAAhD,QAA8D,aAA9D;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpD,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,YAAY,EAAb,CAAR;;AACA,QAAGH,QAAQ,KAAK,MAAb,IAAuBC,QAAQ,KAAK,MAAvC,EAA+C;AAC3CC,MAAAA,QAAQ,CAACE,OAAO,CAAC,IAAD,CAAR,CAAR;AACH,KAFD,MAEO;AACHF,MAAAA,QAAQ,CAACG,OAAO,EAAR,CAAR;AACH;AACJ,GAPD;AAQH,CATM;;AAWP,MAAMF,YAAY,GAAG,MAAM;AACvB,SAAO;AACHG,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJD;;AAMA,OAAO,MAAMY,UAAU,GAAG,MAAM;AAC5B,SAAOL,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACM,aAAa,EAAd,CAAR;AACAN,IAAAA,QAAQ,CAACE,OAAO,CAAC,KAAD,CAAR,CAAR;AACH,GAHD;AAIH,CALM;;AAOP,MAAMI,aAAa,GAAG,MAAM;AACxB,SAAO;AACHF,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMQ,OAAO,GAAGK,UAAU,IAAI;AAC1B,SAAO;AACHH,IAAAA,IAAI,EAAET,OADH;AAEHa,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMJ,OAAO,GAAG,MAAM;AAClB,SAAO;AACHC,IAAAA,IAAI,EAAER,OADH;AAEHY,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALD","sourcesContent":["import {LOGIN_REQUEST, LOGOUT_REQUEST, SUCCESS, FAILURE} from './authTypes';\r\n\r\nexport const authenticateUser = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(loginRequest());\r\n        if(username === \"test\" && password === \"test\") {\r\n            dispatch(success(true));\r\n        } else {\r\n            dispatch(failure());\r\n        }\r\n    };\r\n};\r\n\r\nconst loginRequest = () => {\r\n    return {\r\n        type: LOGIN_REQUEST\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        dispatch(logoutRequest());\r\n        dispatch(success(false));\r\n    };\r\n};\r\n\r\nconst logoutRequest = () => {\r\n    return {\r\n        type: LOGOUT_REQUEST\r\n    };\r\n};\r\n\r\nconst success = isLoggedIn => {\r\n    return {\r\n        type: SUCCESS,\r\n        payload: isLoggedIn\r\n    };\r\n};\r\n\r\nconst failure = () => {\r\n    return {\r\n        type: FAILURE,\r\n        payload: false\r\n    };\r\n}; "]},"metadata":{},"sourceType":"module"}