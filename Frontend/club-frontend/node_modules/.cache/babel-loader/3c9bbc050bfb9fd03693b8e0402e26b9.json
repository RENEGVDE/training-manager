{"ast":null,"code":"var _jsxFileName = \"D:\\\\RENEGVDE\\\\UNIVER\\\\ITS3\\\\Project\\\\Club Management\\\\Frontend\\\\club-frontend\\\\src\\\\components\\\\Players.js\";\nimport React, { Component } from 'react';\nimport { Card, Table, InputGroup, FormControl, Button, Alert } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStepBackward, faFastBackward, faStepForward, faFastForward, faUsers } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../services/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Players extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      this.setState({\n        [event.target.name]: parseInt(event.target.value)\n      });\n    };\n\n    this.firstPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: 1\n        });\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: this.state.currentPage - 1\n        });\n      }\n    };\n\n    this.lastPage = () => {\n      let usersLength = this.props.userData.users.length;\n\n      if (this.state.currentPage < Math.ceil(usersLength / this.state.usersPerPage)) {\n        this.setState({\n          currentPage: Math.ceil(usersLength / this.state.usersPerPage)\n        });\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.usersPerPage)) {\n        this.setState({\n          currentPage: this.state.currentPage + 1\n        });\n      }\n    };\n\n    this.state = {\n      users: [],\n      currentPage: 1,\n      usersPerPage: 5\n    };\n  }\n\n  componentDidMount() {\n    //this.findAllRandomusers();\n    this.props.fetchUsers();\n  } // findAllRandomusers() {\n  //     axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\n  //         .then(response => response.data)\n  //         .then((data) => {\n  //             this.setState({users: data});\n  //         });\n  // };\n\n\n  render() {\n    const {\n      currentPage,\n      usersPerPage\n    } = this.state;\n    const lastIndex = currentPage * usersPerPage;\n    const firstIndex = lastIndex - usersPerPage;\n    const userData = this.props.userData;\n    const users = userData.users;\n    const currentusers = users.slice(firstIndex, lastIndex);\n    const totalPages = users.length / usersPerPage;\n    const pageNumCss = {\n      width: \"45px\",\n      border: \"1px solid #b81717\",\n      color: '#b81717',\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData.error ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: userData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 38\n          }, this), \" users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            hover: true,\n            striped: true,\n            variant: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  children: \"No users Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this) : currentusers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [user.first, ' ', user.last]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.created\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), users.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"float\": \"left\"\n            },\n            children: [\"Page \", currentPage, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"float\": \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === 1 ? true : false,\n                  onClick: this.firstPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faFastBackward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 49\n                  }, this), \" First\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === 1 ? true : false,\n                  onClick: this.prevPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faStepBackward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 49\n                  }, this), \" Prev\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: pageNumCss,\n                className: \"bg-dark\",\n                name: \"currentPage\",\n                value: currentPage,\n                onChange: this.changePage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === totalPages ? true : false,\n                  onClick: this.nextPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faStepForward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 49\n                  }, this), \" Next\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === totalPages ? true : false,\n                  onClick: this.lastPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faFastForward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 49\n                  }, this), \" Last\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Players);","map":{"version":3,"sources":["D:/RENEGVDE/UNIVER/ITS3/Project/Club Management/Frontend/club-frontend/src/components/Players.js"],"names":["React","Component","Card","Table","InputGroup","FormControl","Button","Alert","FontAwesomeIcon","faStepBackward","faFastBackward","faStepForward","faFastForward","faUsers","axios","connect","fetchUsers","Players","constructor","props","changePage","event","setState","target","name","parseInt","value","firstPage","state","currentPage","prevPage","lastPage","usersLength","userData","users","length","Math","ceil","usersPerPage","nextPage","componentDidMount","render","lastIndex","firstIndex","currentusers","slice","totalPages","pageNumCss","width","border","color","textAlign","fontWeight","error","map","user","index","first","last","email","address","created","balance","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,UAArB,EAAiCC,WAAjC,EAA8CC,MAA9C,EAAsDC,KAAtD,QAAkE,iBAAlE;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,aAAvD,EAAsEC,OAAtE,QAAoF,mCAApF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;;;AAEA,MAAMC,OAAN,SAAsBhB,SAAtB,CAAgC;AAC5BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,UAtBmB,GAsBNC,KAAK,IAAI;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBC,QAAQ,CAACJ,KAAK,CAACE,MAAN,CAAaG,KAAd;AADnB,OAAd;AAGH,KA1BkB;;AAAA,SA4BnBC,SA5BmB,GA4BP,MAAM;AACd,UAAG,KAAKC,KAAL,CAAWC,WAAX,GAAyB,CAA5B,EAA+B;AAC3B,aAAKP,QAAL,CAAc;AACVO,UAAAA,WAAW,EAAE;AADH,SAAd;AAGH;AACJ,KAlCkB;;AAAA,SAoCnBC,QApCmB,GAoCR,MAAM;AACb,UAAG,KAAKF,KAAL,CAAWC,WAAX,GAAyB,CAA5B,EAA+B;AAC3B,aAAKP,QAAL,CAAc;AACVO,UAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAAX,GAAyB;AAD5B,SAAd;AAGH;AACJ,KA1CkB;;AAAA,SA4CnBE,QA5CmB,GA4CR,MAAM;AACb,UAAIC,WAAW,GAAG,KAAKb,KAAL,CAAWc,QAAX,CAAoBC,KAApB,CAA0BC,MAA5C;;AACA,UAAG,KAAKP,KAAL,CAAWC,WAAX,GAAyBO,IAAI,CAACC,IAAL,CAAUL,WAAW,GAAG,KAAKJ,KAAL,CAAWU,YAAnC,CAA5B,EAA8E;AAC1E,aAAKhB,QAAL,CAAc;AACVO,UAAAA,WAAW,EAAEO,IAAI,CAACC,IAAL,CAAUL,WAAW,GAAG,KAAKJ,KAAL,CAAWU,YAAnC;AADH,SAAd;AAGH;AACJ,KAnDkB;;AAAA,SAqDnBC,QArDmB,GAqDR,MAAM;AACb,UAAG,KAAKX,KAAL,CAAWC,WAAX,GAAyBO,IAAI,CAACC,IAAL,CAAU,KAAKlB,KAAL,CAAWc,QAAX,CAAoBC,KAApB,CAA0BC,MAA1B,GAAmC,KAAKP,KAAL,CAAWU,YAAxD,CAA5B,EAAmG;AAC/F,aAAKhB,QAAL,CAAc;AACVO,UAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAAX,GAAyB;AAD5B,SAAd;AAGH;AACJ,KA3DkB;;AAEf,SAAKD,KAAL,GAAa;AACTM,MAAAA,KAAK,EAAG,EADC;AAETL,MAAAA,WAAW,EAAG,CAFL;AAGTS,MAAAA,YAAY,EAAG;AAHN,KAAb;AAKH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKrB,KAAL,CAAWH,UAAX;AACH,GAb2B,CAe5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAyCAyB,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA,WAAD;AAAcS,MAAAA;AAAd,QAA8B,KAAKV,KAAzC;AACA,UAAMc,SAAS,GAAGb,WAAW,GAAGS,YAAhC;AACA,UAAMK,UAAU,GAAGD,SAAS,GAAGJ,YAA/B;AACA,UAAML,QAAQ,GAAG,KAAKd,KAAL,CAAWc,QAA5B;AACA,UAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAvB;AACA,UAAMU,YAAY,GAAGV,KAAK,CAACW,KAAN,CAAYF,UAAZ,EAAwBD,SAAxB,CAArB;AACA,UAAMI,UAAU,GAAGZ,KAAK,CAACC,MAAN,GAAeG,YAAlC;AAEA,UAAMS,UAAU,GAAG;AACfC,MAAAA,KAAK,EAAE,MADQ;AAEfC,MAAAA,MAAM,EAAE,mBAFO;AAGfC,MAAAA,KAAK,EAAE,SAHQ;AAIfC,MAAAA,SAAS,EAAE,QAJI;AAKfC,MAAAA,UAAU,EAAE;AALG,KAAnB;AAQA,wBACI;AAAA,gBACKnB,QAAQ,CAACoB,KAAT,gBACG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA,kBACKpB,QAAQ,CAACoB;AADd;AAAA;AAAA;AAAA;AAAA,cADH,gBAIG,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,uCAAjB;AAAA,gCACI,QAAC,IAAD,CAAM,MAAN;AAAA,kCAAa,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAExC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,QAAQ,MAAf;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,OAAO,MAA7B;AAA8B,YAAA,OAAO,EAAC,MAAtC;AAAA,oCACI;AAAA,qCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAUI;AAAA,wBACKqB,KAAK,CAACC,MAAN,KAAiB,CAAjB,gBACG;AAAI,gBAAA,KAAK,EAAC,QAAV;AAAA,uCACI;AAAI,kBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADH,GAIGS,YAAY,CAACU,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAA,wCACI;AAAA,6BAAKD,IAAI,CAACE,KAAV,EAAiB,GAAjB,EAAsBF,IAAI,CAACG,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,4BAAKL,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA,4BAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA,iBAASN,KAAT;AAAA;AAAA;AAAA;AAAA,sBADJ;AALR;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,EA+BKtB,KAAK,CAACC,MAAN,GAAe,CAAf,gBACG,QAAC,IAAD,CAAM,MAAN;AAAA,kCACI;AAAK,YAAA,KAAK,EAAE;AAAC,uBAAQ;AAAT,aAAZ;AAAA,gCACUN,WADV,UAC2BiB,UAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,KAAK,EAAE;AAAC,uBAAQ;AAAT,aAAZ;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,IAAjB;AAAA,sCACI,QAAC,UAAD,CAAY,OAAZ;AAAA,wCACI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAC,eAA9B;AAA8C,kBAAA,QAAQ,EAAEjB,WAAW,KAAK,CAAhB,GAAoB,IAApB,GAA2B,KAAnF;AACI,kBAAA,OAAO,EAAE,KAAKF,SADlB;AAAA,0CAEI,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAEjB;AAAvB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAC,eAA9B;AAA8C,kBAAA,QAAQ,EAAEmB,WAAW,KAAK,CAAhB,GAAoB,IAApB,GAA2B,KAAnF;AACI,kBAAA,OAAO,EAAE,KAAKC,QADlB;AAAA,0CAEI,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAErB;AAAvB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAWI,QAAC,WAAD;AAAa,gBAAA,KAAK,EAAEsC,UAApB;AAAgC,gBAAA,SAAS,EAAE,SAA3C;AAAsD,gBAAA,IAAI,EAAC,aAA3D;AAAyE,gBAAA,KAAK,EAAElB,WAAhF;AACI,gBAAA,QAAQ,EAAE,KAAKT;AADnB;AAAA;AAAA;AAAA;AAAA,sBAXJ,eAaI,QAAC,UAAD,CAAY,MAAZ;AAAA,wCACI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAC,eAA9B;AAA8C,kBAAA,QAAQ,EAAES,WAAW,KAAKiB,UAAhB,GAA6B,IAA7B,GAAoC,KAA5F;AACI,kBAAA,OAAO,EAAE,KAAKP,QADlB;AAAA,0CAEI,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAE5B;AAAvB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAC,eAA9B;AAA8C,kBAAA,QAAQ,EAAEkB,WAAW,KAAKiB,UAAhB,GAA6B,IAA7B,GAAoC,KAA5F;AACI,kBAAA,OAAO,EAAE,KAAKf,QADlB;AAAA,0CAEI,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAEnB;AAAvB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,GA+BkB,IA9DvB;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YADJ;AA0EH;;AAzJ2B;;AA4JhC,MAAMmD,eAAe,GAAGnC,KAAK,IAAI;AAC7B,SAAO;AACHK,IAAAA,QAAQ,EAAEL,KAAK,CAAC2B;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHjD,IAAAA,UAAU,EAAE,MAAMiD,QAAQ,CAACjD,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACgD,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C/C,OAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, Table, InputGroup, FormControl, Button, Alert} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faStepBackward, faFastBackward, faStepForward, faFastForward, faUsers} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {fetchUsers} from '../services/index';\r\n\r\nclass Players extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users : [],\r\n            currentPage : 1,\r\n            usersPerPage : 5\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.findAllRandomusers();\r\n        this.props.fetchUsers();\r\n    }\r\n\r\n    // findAllRandomusers() {\r\n    //     axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n    //         .then(response => response.data)\r\n    //         .then((data) => {\r\n    //             this.setState({users: data});\r\n    //         });\r\n    // };\r\n\r\n    changePage = event => {\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value)\r\n        });\r\n    };\r\n\r\n    firstPage = () => {\r\n        if(this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: 1\r\n            });\r\n        }\r\n    };\r\n\r\n    prevPage = () => {\r\n        if(this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage - 1\r\n            });\r\n        }\r\n    };\r\n\r\n    lastPage = () => {\r\n        let usersLength = this.props.userData.users.length;\r\n        if(this.state.currentPage < Math.ceil(usersLength / this.state.usersPerPage)) {\r\n            this.setState({\r\n                currentPage: Math.ceil(usersLength / this.state.usersPerPage)\r\n            });\r\n        }\r\n    };\r\n\r\n    nextPage = () => {\r\n        if(this.state.currentPage < Math.ceil(this.props.userData.users.length / this.state.usersPerPage)) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {currentPage, usersPerPage} = this.state;\r\n        const lastIndex = currentPage * usersPerPage;\r\n        const firstIndex = lastIndex - usersPerPage;\r\n        const userData = this.props.userData;\r\n        const users = userData.users;\r\n        const currentusers = users.slice(firstIndex, lastIndex);\r\n        const totalPages = users.length / usersPerPage;\r\n\r\n        const pageNumCss = {\r\n            width: \"45px\",\r\n            border: \"1px solid #b81717\",\r\n            color: '#b81717',\r\n            textAlign: \"center\",\r\n            fontWeight: \"bold\"\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {userData.error ?\r\n                    <Alert variant=\"danger\">\r\n                        {userData.error}\r\n                    </Alert> :\r\n                    <Card className={\"border border-dark bg-dark text-white\"}>\r\n                        <Card.Header><FontAwesomeIcon icon={faUsers} /> users</Card.Header>\r\n                        <Card.Body>\r\n                            <Table bordered hover striped variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Name</td>\r\n                                        <td>Email</td>\r\n                                        <td>Address</td>\r\n                                        <td>Created</td>\r\n                                        <td>Balance</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.length === 0 ?\r\n                                        <tr align=\"center\">\r\n                                            <td colSpan=\"6\">No users Available</td>\r\n                                        </tr> :\r\n                                        currentusers.map((user, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{user.first}{' '}{user.last}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.address}</td>\r\n                                                <td>{user.created}</td>\r\n                                                <td>{user.balance}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                        {users.length > 0 ?\r\n                            <Card.Footer>\r\n                                <div style={{\"float\":\"left\"}}>\r\n                                    Page {currentPage} of {totalPages}\r\n                                </div>\r\n                                <div style={{\"float\":\"right\"}}>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === 1 ? true : false}\r\n                                                onClick={this.firstPage}>\r\n                                                <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                            </Button>\r\n                                            <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === 1 ? true : false}\r\n                                                onClick={this.prevPage}>\r\n                                                <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                            </Button>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl style={pageNumCss} className={\"bg-dark\"} name=\"currentPage\" value={currentPage}\r\n                                            onChange={this.changePage}/>\r\n                                        <InputGroup.Append>\r\n                                            <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === totalPages ? true : false}\r\n                                                onClick={this.nextPage}>\r\n                                                <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                            </Button>\r\n                                            <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === totalPages ? true : false}\r\n                                                onClick={this.lastPage}>\r\n                                                <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                            </Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </Card.Footer>:null\r\n                        }\r\n                    </Card>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userData: state.user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Players); "]},"metadata":{},"sourceType":"module"}