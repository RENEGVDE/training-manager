{"ast":null,"code":"var _jsxFileName = \"D:\\\\RENEGVDE\\\\UNIVER\\\\ITS3\\\\Project\\\\Club Management\\\\Frontend\\\\club-frontend\\\\src\\\\components\\\\Players.js\";\nimport React, { Component } from 'react';\nimport { Card, Table, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStepBackward, faFastBackward, faStepForward, faFastForward, faUsers } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Players extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = event => {\n      this.setState({\n        [event.target.name]: parseInt(event.target.value)\n      });\n    };\n\n    this.firstPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: 1\n        });\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.state.currentPage > 1) {\n        this.setState({\n          currentPage: this.state.currentPage - 1\n        });\n      }\n    };\n\n    this.lastPage = () => {\n      if (this.state.currentPage < Math.ceil(this.state.players.length / this.state.playersPerPage)) {\n        this.setState({\n          currentPage: Math.ceil(this.state.players.length / this.state.playersPerPage)\n        });\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.currentPage < Math.ceil(this.state.players.length / this.state.playersPerPage)) {\n        this.setState({\n          currentPage: this.state.currentPage + 1\n        });\n      }\n    };\n\n    this.state = {\n      players: [],\n      currentPage: 1,\n      playersPerPage: 5\n    };\n  }\n\n  componentDidMount() {\n    this.findAllRandomPlayers();\n  }\n\n  findAllRandomPlayers() {\n    axios.get(\"\").then(response => response.data).then(data => {\n      this.setState({\n        players: data\n      });\n    });\n  }\n\n  render() {\n    const {\n      players,\n      currentPage,\n      playersPerPage\n    } = this.state;\n    const lastIndex = currentPage * playersPerPage;\n    const firstIndex = lastIndex - playersPerPage;\n    const currentPlayers = players.slice(firstIndex, lastIndex);\n    const totalPages = players.length / playersPerPage;\n    const pageNumCss = {\n      width: \"45px\",\n      border: \"1px solid #b81717\",\n      color: '#b81717',\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 34\n          }, this), \" Players\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            hover: true,\n            striped: true,\n            variant: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: players.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  children: \"No Players Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this) : currentPlayers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [user.first, ' ', user.last]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.created\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), players.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"float\": \"left\"\n            },\n            children: [\"Page \", currentPage, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"float\": \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === 1 ? true : false,\n                  onClick: this.firstPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faFastBackward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 45\n                  }, this), \" First\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === 1 ? true : false,\n                  onClick: this.prevPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faStepBackward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, this), \" Prev\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: pageNumCss,\n                className: \"bg-dark\",\n                name: \"currentPage\",\n                value: currentPage,\n                onChange: this.changePage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === totalPages ? true : false,\n                  onClick: this.nextPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faStepForward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 45\n                  }, this), \" Next\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"outline-light\",\n                  disabled: currentPage === totalPages ? true : false,\n                  onClick: this.lastPage,\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faFastForward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this), \" Last\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/RENEGVDE/UNIVER/ITS3/Project/Club Management/Frontend/club-frontend/src/components/Players.js"],"names":["React","Component","Card","Table","InputGroup","FormControl","Button","FontAwesomeIcon","faStepBackward","faFastBackward","faStepForward","faFastForward","faUsers","axios","Players","constructor","props","changePage","event","setState","target","name","parseInt","value","firstPage","state","currentPage","prevPage","lastPage","Math","ceil","players","length","playersPerPage","nextPage","componentDidMount","findAllRandomPlayers","get","then","response","data","render","lastIndex","firstIndex","currentPlayers","slice","totalPages","pageNumCss","width","border","color","textAlign","fontWeight","map","user","index","first","last","email","address","created","balance"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, Table, InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faStepBackward, faFastBackward, faStepForward, faFastForward, faUsers} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nexport default class Players extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            players : [],\r\n            currentPage : 1,\r\n            playersPerPage : 5\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.findAllRandomPlayers();\r\n    }\r\n\r\n    findAllRandomPlayers() {\r\n        axios.get(\"\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({players: data});\r\n            });\r\n    };\r\n\r\n    changePage = event => {\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value)\r\n        });\r\n    };\r\n\r\n    firstPage = () => {\r\n        if(this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: 1\r\n            });\r\n        }\r\n    };\r\n\r\n    prevPage = () => {\r\n        if(this.state.currentPage > 1) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage - 1\r\n            });\r\n        }\r\n    };\r\n\r\n    lastPage = () => {\r\n        if(this.state.currentPage < Math.ceil(this.state.players.length / this.state.playersPerPage)) {\r\n            this.setState({\r\n                currentPage: Math.ceil(this.state.players.length / this.state.playersPerPage)\r\n            });\r\n        }\r\n    };\r\n\r\n    nextPage = () => {\r\n        if(this.state.currentPage < Math.ceil(this.state.players.length / this.state.playersPerPage)) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {players, currentPage, playersPerPage} = this.state;\r\n        const lastIndex = currentPage * playersPerPage;\r\n        const firstIndex = lastIndex - playersPerPage;\r\n        const currentPlayers = players.slice(firstIndex, lastIndex);\r\n        const totalPages = players.length / playersPerPage;\r\n\r\n        const pageNumCss = {\r\n            width: \"45px\",\r\n            border: \"1px solid #b81717\",\r\n            color: '#b81717',\r\n            textAlign: \"center\",\r\n            fontWeight: \"bold\"\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header><FontAwesomeIcon icon={faUsers} /> Players</Card.Header>\r\n                    <Card.Body>\r\n                        <Table bordered hover striped variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Name</td>\r\n                                    <td>Email</td>\r\n                                    <td>Address</td>\r\n                                    <td>Created</td>\r\n                                    <td>Balance</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {players.length === 0 ?\r\n                                    <tr align=\"center\">\r\n                                        <td colSpan=\"6\">No Players Available</td>\r\n                                    </tr> :\r\n                                    currentPlayers.map((user, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>{user.first}{' '}{user.last}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.address}</td>\r\n                                            <td>{user.created}</td>\r\n                                            <td>{user.balance}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                    {players.length > 0 ?\r\n                        <Card.Footer>\r\n                            <div style={{\"float\":\"left\"}}>\r\n                                Page {currentPage} of {totalPages}\r\n                            </div>\r\n                            <div style={{\"float\":\"right\"}}>\r\n                                <InputGroup size=\"sm\">\r\n                                    <InputGroup.Prepend>\r\n                                        <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === 1 ? true : false}\r\n                                            onClick={this.firstPage}>\r\n                                            <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                        </Button>\r\n                                        <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === 1 ? true : false}\r\n                                            onClick={this.prevPage}>\r\n                                            <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                        </Button>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl style={pageNumCss} className={\"bg-dark\"} name=\"currentPage\" value={currentPage}\r\n                                        onChange={this.changePage}/>\r\n                                    <InputGroup.Append>\r\n                                        <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === totalPages ? true : false}\r\n                                            onClick={this.nextPage}>\r\n                                            <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                        </Button>\r\n                                        <Button type=\"button\" variant=\"outline-light\" disabled={currentPage === totalPages ? true : false}\r\n                                            onClick={this.lastPage}>\r\n                                            <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                        </Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </div>\r\n                        </Card.Footer>:null\r\n                    }\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}