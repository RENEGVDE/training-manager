{"ast":null,"code":"import { SAVE_EX_REQUEST, FETCH_EX_REQUEST, UPDATE_EX_REQUEST, DELETE_EX_REQUEST, EX_SUCCESS, EX_FAILURE } from \"./exerciseTypes\";\nimport axios from 'axios';\nexport const saveExercise = exercise => {\n  return dispatch => {\n    dispatch({\n      type: SAVE_EX_REQUEST\n    });\n    axios.post(\"http://localhost:8081/rest/exercise\", exercise).then(response => {\n      dispatch(exerciseSuccess(response.data));\n    }).catch(error => {\n      dispatch(exerciseFailure(error));\n    });\n  };\n}; // const saveExerciseRequest = () => {\n//     return {\n//         type: SAVE_EX_REQUEST\n//     };\n// };\n// const saveExerciseSuccess = EX => {\n//     return {\n//         type: SAVE_EX_SUCCESS,\n//         payload: EX\n//     };\n// };\n// const saveExerciseFailure = error => {\n//     return {\n//         type: SAVE_EX_FAILURE,\n//         payload: error\n//     };\n// }; \n\nconst saveExerciseRequest = () => {\n  return {\n    type: SAVE_EX_REQUEST\n  };\n};\n\nconst fetchExerciseRequest = () => {\n  return {\n    type: FETCH_EX_REQUEST\n  };\n};\n\nexport const fetchExercise = exerciseId => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_EX_REQUEST\n    });\n    axios.get(\"http://localhost:8081/rest/exercise/\" + exerciseId).then(response => {\n      dispatch(exerciseSuccess(response.data));\n    }).catch(error => {\n      dispatch(exerciseFailure(error));\n    });\n  };\n};\n\nconst updateExerciseRequest = () => {\n  return {\n    type: UPDATE_EX_REQUEST\n  };\n};\n\nexport const updateExercise = exercise => {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_EX_REQUEST\n    });\n    axios.put(\"http://localhost:8081/rest/exercise\", exercise).then(response => {\n      dispatch(exerciseSuccess(response.data));\n    }).catch(error => {\n      dispatch(exerciseFailure(error));\n    });\n  };\n};\n\nconst deleteExerciseRequest = () => {\n  return {\n    type: DELETE_EX_REQUEST\n  };\n};\n\nexport const deleteExercise = exerciseId => {\n  return dispatch => {\n    dispatch({\n      type: DELETE_EX_REQUEST\n    });\n    axios.delete(\"http://localhost:8081/rest/exercise/\" + exerciseId).then(response => {\n      dispatch(exerciseSuccess(response.data));\n    }).catch(error => {\n      dispatch(exerciseFailure(error));\n    });\n  };\n};\n\nconst exerciseSuccess = exercise => {\n  return {\n    type: EX_SUCCESS,\n    payload: exercise\n  };\n};\n\nconst exerciseFailure = error => {\n  return {\n    type: EX_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["D:/RENEGVDE/UNIVER/ITS3/Project/Club Management/Frontend/club-frontend/src/services/exercise/exerciseActions.js"],"names":["SAVE_EX_REQUEST","FETCH_EX_REQUEST","UPDATE_EX_REQUEST","DELETE_EX_REQUEST","EX_SUCCESS","EX_FAILURE","axios","saveExercise","exercise","dispatch","type","post","then","response","exerciseSuccess","data","catch","error","exerciseFailure","saveExerciseRequest","fetchExerciseRequest","fetchExercise","exerciseId","get","updateExerciseRequest","updateExercise","put","deleteExerciseRequest","deleteExercise","delete","payload"],"mappings":"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","sourcesContent":["import {SAVE_EX_REQUEST, FETCH_EX_REQUEST, UPDATE_EX_REQUEST, DELETE_EX_REQUEST, EX_SUCCESS, EX_FAILURE} from \"./exerciseTypes\";\r\nimport axios from 'axios';\r\n\r\nexport const saveExercise = exercise => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SAVE_EX_REQUEST\r\n        });\r\n        axios.post(\"http://localhost:8081/rest/exercise\", exercise)\r\n            .then(response => {\r\n                dispatch(exerciseSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(exerciseFailure(error))\r\n            });\r\n    };\r\n};\r\n\r\n// const saveExerciseRequest = () => {\r\n//     return {\r\n//         type: SAVE_EX_REQUEST\r\n//     };\r\n// };\r\n\r\n// const saveExerciseSuccess = EX => {\r\n//     return {\r\n//         type: SAVE_EX_SUCCESS,\r\n//         payload: EX\r\n//     };\r\n// };\r\n\r\n// const saveExerciseFailure = error => {\r\n//     return {\r\n//         type: SAVE_EX_FAILURE,\r\n//         payload: error\r\n//     };\r\n// }; \r\n\r\nconst saveExerciseRequest = () => {\r\n    return {\r\n        type: SAVE_EX_REQUEST\r\n    };\r\n};\r\n\r\nconst fetchExerciseRequest = () => {\r\n    return {\r\n        type: FETCH_EX_REQUEST\r\n    };\r\n};\r\n\r\nexport const fetchExercise = exerciseId => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: FETCH_EX_REQUEST\r\n        });\r\n        axios.get(\"http://localhost:8081/rest/exercise/\"+exerciseId)\r\n            .then(response => {\r\n                dispatch(exerciseSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(exerciseFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst updateExerciseRequest = () => {\r\n    return {\r\n        type: UPDATE_EX_REQUEST\r\n    };\r\n};\r\n\r\nexport const updateExercise = exercise => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: UPDATE_EX_REQUEST\r\n        });\r\n        axios.put(\"http://localhost:8081/rest/exercise\", exercise)\r\n            .then(response => {\r\n                dispatch(exerciseSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(exerciseFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst deleteExerciseRequest = () => {\r\n    return {\r\n        type: DELETE_EX_REQUEST\r\n    };\r\n};\r\n\r\nexport const deleteExercise = exerciseId => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: DELETE_EX_REQUEST\r\n        });\r\n        axios.delete(\"http://localhost:8081/rest/exercise/\"+exerciseId)\r\n            .then(response => {\r\n                dispatch(exerciseSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(exerciseFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst exerciseSuccess = exercise => {\r\n    return {\r\n        type: EX_SUCCESS,\r\n        payload: exercise\r\n    };\r\n};\r\n\r\nconst exerciseFailure = error => {\r\n    return {\r\n        type: EX_FAILURE,\r\n        payload: error\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}