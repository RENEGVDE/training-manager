{"ast":null,"code":"var _jsxFileName = \"D:\\\\RENEGVDE\\\\UNIVER\\\\ITS3\\\\Project\\\\Club Management\\\\Frontend\\\\club-frontend\\\\src\\\\components\\\\Exercise.js\";\nimport React, { Component } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare, faSave, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport MyToast from './MyToast';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Exercise extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      exName: '',\n      exDuration: '',\n      exPosition: '',\n      exCoach: ''\n    };\n\n    this.resetExercise = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.submitExercise = event => {\n      event.preventDefault();\n      const exercise = {\n        exName: this.state.exName,\n        exDuration: this.state.exDuration,\n        exPosition: this.state.exPosition,\n        exCoach: this.state.exCoach\n      };\n      axios.post(\"http://localhost:8081/rest/exercise\", exercise).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.exerciseChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.exerciseChange = this.exerciseChange.bind(this);\n    this.submitExercise = this.submitExercise.bind(this);\n  } // submitExercise(event){\n  //     alert(\n  //         'Name: '+this.state.nameEx+ \n  //         ', Duration: '+this.state.durationEx+\n  //         ', Position: '+this.state.positionEx+\n  //         ', Coach: '+this.state.coachEx    \n  //     );\n  //     event.preventDefault();\n  // }\n\n\n  render() {\n    const {\n      exName,\n      exDuration,\n      exPosition,\n      exCoach\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": this.state.show ? \"block\" : \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MyToast, {\n          children: {\n            show: this.state.show,\n            message: \"Exercise Added Successfully.\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlusSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), \" Add Exercise\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onReset: this.resetExercise,\n          onSubmit: this.submitExercise,\n          id: \"exerciseFormId\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Exercise Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"exName\",\n                  value: exName,\n                  onChange: this.exerciseChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Exercise Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Enter the exercise name.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridDuration\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Exercise Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"exDuration\",\n                  value: exDuration,\n                  onChange: this.exerciseChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Exercise Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Enter the exercise duration.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridPosition\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Player Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"exPosition\",\n                  value: exPosition,\n                  onChange: this.exerciseChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Player Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Enter the player position for this exercise.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridCoach\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Coach Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"exCoach\",\n                  value: exCoach,\n                  onChange: this.exerciseChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Coach Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Enter the name of the coach who will lead the exercise.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            style: {\n              \"textAlign\": \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), \" Submit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              type: \"reset\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUndo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), \" Reset\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/RENEGVDE/UNIVER/ITS3/Project/Club Management/Frontend/club-frontend/src/components/Exercise.js"],"names":["React","Component","Card","Form","Button","Col","FontAwesomeIcon","faPlusSquare","faSave","faUndo","MyToast","axios","Exercise","constructor","props","initialState","exName","exDuration","exPosition","exCoach","resetExercise","setState","submitExercise","event","preventDefault","exercise","state","post","then","response","data","setTimeout","exerciseChange","target","name","value","show","bind","render","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons'\r\nimport MyToast from './MyToast';\r\nimport axios from 'axios';\r\n\r\nexport default class Exercise extends Component {\r\n\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.exerciseChange=this.exerciseChange.bind(this);\r\n        this.submitExercise=this.submitExercise.bind(this);\r\n    }\r\n\r\n    // submitExercise(event){\r\n    //     alert(\r\n    //         'Name: '+this.state.nameEx+ \r\n    //         ', Duration: '+this.state.durationEx+\r\n    //         ', Position: '+this.state.positionEx+\r\n    //         ', Coach: '+this.state.coachEx    \r\n    //     );\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    initialState={\r\n        exName:'',\r\n        exDuration:'',\r\n        exPosition:'',\r\n        exCoach:''\r\n    };\r\n\r\n    resetExercise = () => {\r\n        this.setState(() => this.initialState);\r\n    }\r\n\r\n    submitExercise = event => {\r\n        event.preventDefault();\r\n\r\n        const exercise = {\r\n            exName: this.state.exName,\r\n            exDuration: this.state.exDuration,\r\n            exPosition: this.state.exPosition,\r\n            exCoach: this.state.exCoach\r\n        };\r\n\r\n        axios.post(\"http://localhost:8081/rest/exercise\", exercise)\r\n            .then(response => {\r\n                if(response.data != null) {\r\n                    this.setState({\"show\":true});\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000);\r\n                } else {\r\n                    this.setState({\"show\":false});\r\n                }\r\n            });\r\n\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    exerciseChange=event=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const{exName, exDuration, exPosition, exCoach}=this.state\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast children = {{show:this.state.show, message:\"Exercise Added Successfully.\"}}/>\r\n                </div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header>\r\n                        <FontAwesomeIcon icon={faPlusSquare} /> Add Exercise\r\n                    </Card.Header>\r\n                    <Form onReset={this.resetExercise} onSubmit={this.submitExercise} id=\"exerciseFormId\"> \r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\">\r\n                                    <Form.Label>Exercise Name</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\" type=\"text\" name=\"exName\"\r\n                                    value={exName}\r\n                                    onChange={this.exerciseChange} \r\n                                    className={\"bg-dark text-white\"} placeholder=\"Exercise Name\" />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Enter the exercise name.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridDuration\">\r\n                                    <Form.Label>Exercise Duration</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\" type=\"text\" name=\"exDuration\" \r\n                                    value={exDuration}\r\n                                    onChange={this.exerciseChange}\r\n                                    className={\"bg-dark text-white\"} placeholder=\"Exercise Duration\" />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Enter the exercise duration.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridPosition\">\r\n                                    <Form.Label>Player Position</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\" type=\"text\" name=\"exPosition\" \r\n                                    value={exPosition}\r\n                                    onChange={this.exerciseChange}\r\n                                    className={\"bg-dark text-white\"} placeholder=\"Player Position\" />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Enter the player position for this exercise.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridCoach\">\r\n                                    <Form.Label>Coach Name</Form.Label>\r\n                                    <Form.Control required autoComplete=\"off\" type=\"text\" name=\"exCoach\" \r\n                                    value={exCoach}\r\n                                    onChange={this.exerciseChange}\r\n                                    className={\"bg-dark text-white\"} placeholder=\"Coach Name\" />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    Enter the name of the coach who will lead the exercise.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> Submit\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}